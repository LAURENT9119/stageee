Merci pour le log détaillé. Voici les **problèmes détectés** dans ta tentative de déploiement sur Vercel et comment les corriger :

---

### ❌ **1. Module introuvable : `@/components/icons`**

**Erreur** :

```
Module not found: Can't resolve '@/components/icons'
```

#### ✅ Solution :

* Vérifie que le fichier ou dossier `components/icons` **existe bien**.
* L'import `@/components/icons` suppose que tu utilises `baseUrl` dans `tsconfig.json` ou `jsconfig.json`.

**Exemple de `tsconfig.json` nécessaire :**

```json
{
  "compilerOptions": {
    "baseUrl": ".",
    "paths": {
      "@/*": ["./*"]
    }
  }
}
```

* Si ce dossier a été supprimé ou renommé, **mets à jour tous les imports concernés** dans ton code.

---

### ❌ **2. Erreur liée à `next/headers` dans un fichier utilisé dans les pages**

**Erreur :**

```
You're importing a component that needs next/headers. That only works in a Server Component which is not supported in the pages/ directory.
```

#### ✅ Explication :

Tu as du code utilisant `next/headers` (comme `cookies()`) dans un **fichier qui est utilisé dans un composant `pages/`**, ce qui est **incompatible**.

* Le fichier concerné ici est :

  ```
  ./lib/auth.ts
  ```

#### ✅ Solution :

Deux options :

1. **Déplacer le code vers un composant `app/`** (si tu utilises Next.js App Router)
2. **Séparer la logique** :

   * Code **client-compatible** dans un fichier (ex. `auth-client.ts`)
   * Code **serveur (Server Component)** dans un fichier qui reste uniquement utilisé par `app/`

**Par exemple :**

```ts
// lib/auth.ts (Server-side only)
import { createServerClient } from "@supabase/ssr"
import { cookies } from "next/headers"

export async function createClient() {
  const cookieStore = cookies()
  const supabase = createServerClient("url", "key", { cookies: () => cookieStore })
  return supabase
}
```

➡️ Ce fichier **ne doit PAS** être importé dans un composant utilisé dans `pages/`.

---

### ✅ Résumé des actions à faire :

| Action                    | Description                                                                                                |
| ------------------------- | ---------------------------------------------------------------------------------------------------------- |
| 🛠 Corriger import        | Assure-toi que `@/components/icons` existe ou remplace-le par un chemin relatif (`../../components/icons`) |
| 🧠 Isoler logique serveur | Ne pas utiliser `next/headers` ou `cookies()` dans `pages/` – réserver ça à App Router (`app/`)            |
| 📁 Organisation           | Si tu veux utiliser `next/headers`, déplace les pages concernées dans `app/` plutôt que `pages/`           |
| 🔍 Vérifie tes imports    | Refais une passe rapide sur tous les fichiers utilisant `auth.ts` ou `next/headers`                        |

---

### Besoin d’aide pour migrer de `pages/` vers `app/` ou restructurer ton projet ?

Envoie-moi ton `arborescence de fichiers` (ou juste le contenu de `/components`, `/lib`, `/pages` et `/app`), et je te guiderai étape par étape.
